// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/30/2022 18:31:19"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          questao_02
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module questao_02_vlg_vec_tst();
// constants                                           
// general purpose registers
reg A1;
reg A2;
reg A3;
reg A4;
reg A5;
reg A6;
reg A7;
reg A8;
reg S1;
reg S2;
reg S3;
// wires                                               
wire OUT;

// assign statements (if any)                          
questao_02 i1 (
// port map - connection between master ports and signals/registers   
	.A1(A1),
	.A2(A2),
	.A3(A3),
	.A4(A4),
	.A5(A5),
	.A6(A6),
	.A7(A7),
	.A8(A8),
	.OUT(OUT),
	.S1(S1),
	.S2(S2),
	.S3(S3)
);
initial 
begin 
#1000000 $finish;
end 

// A1
initial
begin
	A1 = 1'b1;
	A1 = #10000 1'b0;
	A1 = #80000 1'b1;
	A1 = #70000 1'b0;
end 

// A2
initial
begin
	A2 = 1'b0;
	A2 = #10000 1'b1;
	A2 = #10000 1'b0;
	A2 = #60000 1'b1;
	A2 = #10000 1'b0;
	A2 = #10000 1'b1;
	A2 = #60000 1'b0;
end 

// A3
initial
begin
	A3 = 1'b0;
	A3 = #20000 1'b1;
	A3 = #10000 1'b0;
	A3 = #50000 1'b1;
	A3 = #20000 1'b0;
	A3 = #10000 1'b1;
	A3 = #50000 1'b0;
end 

// A4
initial
begin
	A4 = 1'b0;
	A4 = #30000 1'b1;
	A4 = #10000 1'b0;
	A4 = #40000 1'b1;
	A4 = #30000 1'b0;
	A4 = #10000 1'b1;
	A4 = #40000 1'b0;
end 

// A5
initial
begin
	A5 = 1'b0;
	A5 = #40000 1'b1;
	A5 = #10000 1'b0;
	A5 = #30000 1'b1;
	A5 = #40000 1'b0;
	A5 = #10000 1'b1;
	A5 = #30000 1'b0;
end 

// A6
initial
begin
	A6 = 1'b0;
	A6 = #50000 1'b1;
	A6 = #10000 1'b0;
	A6 = #20000 1'b1;
	A6 = #50000 1'b0;
	A6 = #10000 1'b1;
	A6 = #20000 1'b0;
end 

// A7
initial
begin
	A7 = 1'b0;
	A7 = #60000 1'b1;
	A7 = #10000 1'b0;
	A7 = #10000 1'b1;
	A7 = #60000 1'b0;
	A7 = #10000 1'b1;
	A7 = #10000 1'b0;
end 

// A8
initial
begin
	A8 = 1'b0;
	A8 = #70000 1'b1;
	A8 = #80000 1'b0;
end 

// S1
always
begin
	S1 = 1'b0;
	S1 = #10000 1'b1;
	#10000;
end 

// S2
always
begin
	S2 = 1'b0;
	S2 = #20000 1'b1;
	#20000;
end 

// S3
initial
begin
	repeat(12)
	begin
		S3 = 1'b0;
		S3 = #40000 1'b1;
		# 40000;
	end
	S3 = 1'b0;
end 
endmodule

